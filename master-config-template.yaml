#cloud-config
---

write_files:
  - path: /opt/bin/ctls-install.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      # Install the `calicoctl` binary
      wget -P -N /opt/bin http://www.projectcalico.org/builds/calicoctl

      # Install the `kubectl` binary
      wget -N -P /opt/bin http://storage.googleapis.com/kubernetes-release/release/v1.1.2/bin/linux/amd64/kubelet

      chmod +x /opt/bin/calicoctl /opt/bin/kubectl
coreos:
  update:
    reboot-strategy: off
  etcd2:
    name: etcd
    listen-client-urls: http://127.0.0.1:2379
    advertise-client-urls: http://127.0.0.1:2379
    listen-peer-urls: http://127.0.0.1:2380
  units:
    - name: ctls-install.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Installs Calico and kubernetes tools
        After=network-online.target
        Requires=network-online.target

        [Service]
        ExecStart=/opt/bin/ctls-install.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: calico-node.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=calicoctl node
        After=docker.service ctls-install.service
        Requires=docker.service ctls-install.service
        
        [Service]
        User=root
        Environment="ETCD_AUTHORITY=127.0.0.1:6666"
        PermissionsStartOnly=true
        ExecStart=/opt/bin/calicoctl node --detach=false
        Restart=always
        RestartSec=10
    
        [Install]
        WantedBy=multi-user.target
    - name: kube-apiserver.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=etcd2.service
        After=etcd2.service
        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-apiserver -z /opt/bin/kube-apiserver https://storage.googleapis.com/kubernetes-release/release/v1.1.2/bin/linux/amd64/kube-apiserver
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver
        ExecStart=/opt/bin/kube-apiserver \
        --allow-privileged=true \
        --etcd-servers=http://127.0.0.1:2379 \
        --insecure-bind-address=0.0.0.0 \
        --service-cluster-ip-range=10.100.0.0/24
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-controller-manager.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service
        [Service]
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-controller-manager -z /opt/bin/kube-controller-manager https://storage.googleapis.com/kubernetes-release/release/v1.1.2/bin/linux/amd64/kube-controller-manager
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-controller-manager
        ExecStart=/opt/bin/kube-controller-manager \
        --master=127.0.0.1:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-scheduler.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service
        [Service]
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-scheduler -z /opt/bin/kube-scheduler https://storage.googleapis.com/kubernetes-release/release/v1.1.2/bin/linux/amd64/kube-scheduler
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-scheduler
        ExecStart=/opt/bin/kube-scheduler --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
